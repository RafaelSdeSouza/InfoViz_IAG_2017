dat_r<-spsample(gc.sr, 100,type="hexagonal")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
gc.sr = SpatialPolygons(list(Polygons(list(Polygon(gc)), "x")))
dat_r<-spsample(gc.sr, 100,type="random")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
dat_r<-spsample(gc.sr, 1000,type="random")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
dat_r<-spsample(gc.sr, 1000,type="Fibonacci")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
gc.sr = SpatialPolygons(list(Polygons(list(Polygon(gc)), "x")))
dat_r<-spsample(gc.sr, 1000,type="nonaligned")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
mypal<-c("#009b3a", "#fedf00", "#002776", "white")
col=c()
for(i in 1:1000){
col[i] = mypal[i%%5+1]
}
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "#009b3a")
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "white")
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "white",cex=2)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "white",cex=1.25)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(all)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(all)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(all)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot.new()
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(all)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(mar=c(0.1,0.1,0.1,0.1))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot()
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
require(maps)
require(deldir)
library(mapproj)
mypal<-c("#009b3a", "#fedf00", "#002776", "white")
col=c()
for(i in 1:1000){
col[i] = mypal[i%%5+1]
}
require(sp)
c<-map("world", "Brazil")
gc<-data.frame(x=c$x,y=c$y)
gc<-na.omit(gc)
gc.sr = SpatialPolygons(list(Polygons(list(Polygon(gc)), "x")))
dat_r<-spsample(gc.sr, 1000,type="nonaligned")
all<-rbind(gc,dat_r)
dat_r
rbind(gc,dat_r)
gc
dat_r[,]
dat_r[]
dat_r
as.data.frame(dat_r)
all<-rbind(gc,as.data.frame(dat_r))
plot(all)
gc[1,]
as.data.frame(dat_r)[1,]
colnames(as.data.frame(dat_r))<-c("x","y")
all<-rbind(gc,dat_r)
plot(all)
dat_r
dat_r[1,]
colnames(as.data.frame(dat_r))<-c("x","y")
as.data.frame(dat_r)
dat_r<-as.data.frame(dat_r)
colnames(dat_r)<-c("x","y")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
par(mar=c(0.1,0.1,0.1,0.1))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "gray95", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "gray95", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "gray95", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(all)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
poly.image( c$x, c$y, rnorm(593,1,10))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
420*4
180*4
gc
install.packages('digitize')
library(digitize)
cal = ReadAndCal('/Users/rafael/Downloads/mem.jpg')
data.points = DigitData(col = 'red')
cal = ReadAndCal('/Users/rafael/Downloads/mem.jpg')
data.points = DigitData(col = 'red')
library(digitize)
cal = ReadAndCal('/Users/rafael/Downloads/mem.jpg')
data.points = DigitData(col = 'red')
xx <- seq(0,50,length=500)
df <- do.call(cbind,lapply(1:40,
function(i){
sin(rpois(1,5)*xx+1)+1
}
))
df[1,] <- 0
df[nrow(df),] <- 0
op = par(bg = "white", mar = rep(0.1, 4))
plot(x=xx, y=rep(40,length(xx)), ylim=c(0,45), type="n", ylab="")
for(i in 40:1){
offset <- 1.1*i
polygon(x=xx, y=offset+df[,i], col=col[i], border="black",alpha=0.7)
}
(1/5)^2
(1/5)^
(1/5)^3
79*2000
80*2000
library(ggplot2)
library(ggmap)
library(geosphere)
library(plyr)
mensbracket=read.csv("mensbracket.csv")
ladiesbracket=read.csv("ladiesbracket.csv")
usopenbracket=rbind(mensbracket,ladiesbracket) # combining the two genders
usopencountry=as.data.frame(table(usopenbracket$country)) # number of players from different countries
colnames(usopencountry)=c("Country","Players") # modifying column names
kable(head(usopencountry))
library(ggmap)
install.packages("ggmap", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(ggplot2)
library(ggmap)
library(geosphere)
library(plyr)
mensbracket=read.csv("https://raw.githubusercontent.com/patilv/USOpengreatcircles/master/mensbracket.csv")
ladiesbracket=read.csv("https://raw.githubusercontent.com/patilv/USOpengreatcircles/master/ladiesbracket.csv")
usopenbracket=rbind(mensbracket,ladiesbracket) # combining the two genders
usopencountry=as.data.frame(table(usopenbracket$country)) # number of players from different countries
colnames(usopencountry)=c("Country","Players") # modifying column names
kable(head(usopencountry))
library(plyr)
library(geosphere)
library(ggmap)
library(ggplot2)
mensbracket=read.csv("https://raw.githubusercontent.com/patilv/USOpengreatcircles/master/mensbracket.csv")
ladiesbracket=read.csv("https://raw.githubusercontent.com/patilv/USOpengreatcircles/master/ladiesbracket.csv")
usopenbracket=rbind(mensbracket,ladiesbracket) # combining the two genders
usopencountry=as.data.frame(table(usopenbracket$country)) # number of players from different countries
colnames(usopencountry)=c("Country","Players") # modifying column names
kable(head(usopencountry))
usopencountry=cbind(usopencountry,geocode(as.character(usopencountry$Country)))
usopencountry[5,]$lon=18.383925 # Bosnia
usopencountry[5,]$lat=43.851882 # Bosnia
usopencountry[11,]$lon=33.3974183 # Cyprus
usopencountry[11,]$lat=35.1919937 # Cyprus
usopencountry[45,]$lon=174.885971 # New Zealand
usopencountry[45,]$lat=-40.900557 # New Zealand
nygeocode=geocode(as.character("New York City")) # This was fine
devtools::install_github("lchiffon/wordcloud2")
library(wordcloud2)
wordcloud2(demoFreq, size = 1,shape = 'star')
wordcloud2(demoFreq, size = 1,shape = 'R')
library(devtools)
install_github("mtennekes/tmap", subdir = "pkg")
data(land, World)
# convert to Eckert IV projection
land_eck4 <- set_projection(land, "eck4")
# plot
tm_shape(land_eck4) +
tm_raster("elevation",
breaks=c(-Inf, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, Inf),
palette = terrain.colors(9),
title="Elevation") +
tm_shape(World) +
tm_borders("grey20") +
tm_grid(projection="longlat", labels.size = .5) +
tm_text("name", size="AREA") +
tm_compass(position = c(.65, .15), color.light = "grey90") +
tm_credits("Eckert IV projection", position = c("RIGHT", "BOTTOM")) +
tm_layout(inner.margins=c(.04,.03, .02, .01),
legend.position = c("left", "bottom"),
legend.frame = TRUE,
bg.color="lightblue",
legend.bg.color="lightblue",
earth.boundary = TRUE,
space.color="grey90") +
tm_style_classic()
library(tmap)
data(land, World)
# convert to Eckert IV projection
land_eck4 <- set_projection(land, "eck4")
# plot
tm_shape(land_eck4) +
tm_raster("elevation",
breaks=c(-Inf, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, Inf),
palette = terrain.colors(9),
title="Elevation") +
tm_shape(World) +
tm_borders("grey20") +
tm_grid(projection="longlat", labels.size = .5) +
tm_text("name", size="AREA") +
tm_compass(position = c(.65, .15), color.light = "grey90") +
tm_credits("Eckert IV projection", position = c("RIGHT", "BOTTOM")) +
tm_layout(inner.margins=c(.04,.03, .02, .01),
legend.position = c("left", "bottom"),
legend.frame = TRUE,
bg.color="lightblue",
legend.bg.color="lightblue",
earth.boundary = TRUE,
space.color="grey90") +
tm_style_classic()
land
land_eck4
tm_shape(land_eck4) +
tm_raster("water",
breaks=c(-Inf, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, Inf),
palette = terrain.colors(9),
title="Water") +
tm_shape(World) +
tm_borders("grey20") +
tm_grid(projection="longlat", labels.size = .5) +
tm_text("name", size="AREA") +
tm_compass(position = c(.65, .15), color.light = "grey90") +
tm_credits("Eckert IV projection", position = c("RIGHT", "BOTTOM")) +
tm_layout(inner.margins=c(.04,.03, .02, .01),
legend.position = c("left", "bottom"),
legend.frame = TRUE,
bg.color="lightblue",
legend.bg.color="lightblue",
earth.boundary = TRUE,
space.color="grey90") +
tm_style_classic()
tm_shape(land_eck4) +
tm_raster("Water",
breaks=c(-Inf, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, Inf),
palette = terrain.colors(9),
title="Water") +
tm_shape(World) +
tm_borders("grey20") +
tm_grid(projection="longlat", labels.size = .5) +
tm_text("name", size="AREA") +
tm_compass(position = c(.65, .15), color.light = "grey90") +
tm_credits("Eckert IV projection", position = c("RIGHT", "BOTTOM")) +
tm_layout(inner.margins=c(.04,.03, .02, .01),
legend.position = c("left", "bottom"),
legend.frame = TRUE,
bg.color="lightblue",
legend.bg.color="lightblue",
earth.boundary = TRUE,
space.color="grey90") +
tm_style_classic()
wstr(land)
str(land)
cite("mgcv")
cite(package="mgcv")
citation("mgcv")
200/6
1200+60+50+100+100+400+1200
0.9*13.3
0.119*50000
(0.119*50000)*5
13.3/12
0.9*13.3
(1+0.01)^60
(1+0.01)^60*50000
install.packages("DT", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data(iris)
iris
install.packages("webshot", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data(iris)
d <- iris
DT::datatable(d)
knitr::opts_chunk$set(echo = FALSE)
p <- ggplot(data = d, aes(x = Sepal.Length, group=Species, colour = Species)) +
geom_histogram()
d
p <- ggplot(data = d, aes(x = Sepal.Length, group=Species, colour = Species)) +
geom_histogram()
require(DT);require(webshot);require(ggplot2);require(plotly)
ggplot(data = d, aes(x = Sepal.Length, group=Species, colour = Species)) +
geom_histogram()
ggplot(data = d, aes(x = Sepal.Length, group=Species, colour = Species)) +
geom_histogram()
ggplotly(p)
p <- ggplot(data = d, aes(x = Sepal.Length, group=Species, colour = Species)) +
geom_histogram()
ggplotly(p)
d
d <- iris
ggplot(data = iris, aes(x = Sepal.Length, group=Species, colour = Species)) +
geom_histogram()
p <- ggplot(data = iris, aes(x = Sepal.Length, group=Species, colour = Species)) +
geom_histogram()
ggplotly(p)
p
ggplotly(p)
p <- ggplot(data = iris, aes(x = Sepal.Length, group=Species, colour = Species)) +
geom_histogram()
ggplotly(p)
ggplot(data = iris, aes(x = Sepal.Length, group=Species, fill = Species)) +
geom_histogram()
p <- ggplot(data = iris, aes(x = Sepal.Length, group=Species, fill = Species)) +
geom_histogram(bins = 45)
ggplotly(p)
p
devtools::install_github("ropensci/plotly")
install.packages("htmlwidgets", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
unlink('Dropbox/artigos/Meusartigos/IAA-WGC/Github/InfoViz_IAG_2017/InfoViz_IAG_cache', recursive = TRUE)
setwd("~/Dropbox/artigos/Meusartigos/IAA-WGC/Github/InfoViz_IAG_2017")
unlink('InfoViz_IAG_cache', recursive = TRUE)
