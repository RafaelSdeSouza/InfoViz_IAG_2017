axis.line = element_line(color = 'black'))+
scale_alpha(guide="none",range=c(0,0.45))+scale_color_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_fill_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_shape_tremmel(labels = c("SDSS", "S-PLUS"))+
facet_wrap(~Survey)
r2
p1 <- ggplot(g_melt,aes(x=Fe,y=value,color=Survey,fill=Survey,shape=Survey))
p2<-p1+
#  stat_density2d(geom="polygon",aes(fill =Survey,alpha=..level..),na.rm = TRUE,n = 250,contour = TRUE) +
geom_point() +
#  stat_smooth(formula=y ~ poly(x, 1),se = TRUE,method = "lm")+
xlab(expression(paste("Observed ","[",Fe/H,beta,"]",sep="")))+
ylab(expression(paste("Predicted ","[",Fe/H,beta,"]",sep="")))+
geom_abline(intercept = 0,linetype="dashed",color="gray20")+
theme_bw()+
theme(legend.position="none",legend.text = element_text(colour="gray40"),
legend.title=element_blank(),text = element_text(size=15),
axis.line = element_line(color = 'black'),axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
scale_alpha(guide="none",range=c(0,0.45))+scale_color_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_fill_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_shape_tremmel(labels = c("SDSS", "S-PLUS"))+
facet_wrap(~Survey)+
annotate("text",
label = c(rsdss,rsplus), size = 5, x = - 2.75, y = 0.5,parse=TRUE) +
coord_cartesian(ylim=c(-3.75,0.75))
# Residuals
xbin <- cut(g_melt$Fe,seq(-4, 1, by = 1))
yres <- g_melt$value-g_melt$Fe
res_data <- data.frame(Fe=xbin,yres,Survey=g_melt$Survey)
res_data <- res_data[!is.na(res_data$Fe),]
r1 <- ggplot(res_data,aes(x=Fe,y=yres,color=Survey,fill=Survey,shape=Survey))
r2<-r1+
#  stat_density2d(geom="polygon",aes(fill =Survey,alpha=..level..),na.rm = TRUE,n = 250,contour = TRUE) +
geom_boxplot() + xlab(expression(paste("Observed ","[",Fe/H,"]",sep="")))+
ylab("Residual")+
scale_x_discrete(labels=c(-3.5,-2.5,-1.5,-0.5,0.5))+
geom_hline(yintercept = 0,linetype="dashed",color="gray20")+
theme_bw()+
theme(legend.position="none",legend.text = element_text(colour="gray40"),
legend.title=element_blank(),text = element_text(size=15),
axis.line = element_line(color = 'black'),strip.background = element_blank(),
strip.text.x = element_blank())+
scale_alpha(guide="none",range=c(0,0.45))+scale_color_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_fill_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_shape_tremmel(labels = c("SDSS", "S-PLUS"))+
facet_wrap(~Survey)
grid.arrange(p2, r2,ncol=1, nrow =2)
p1 <- ggplot(g_melt,aes(x=Fe,y=value,color=Survey,fill=Survey,shape=Survey))
p2<-p1+
#  stat_density2d(geom="polygon",aes(fill =Survey,alpha=..level..),na.rm = TRUE,n = 250,contour = TRUE) +
geom_point() +
#  stat_smooth(formula=y ~ poly(x, 1),se = TRUE,method = "lm")+
xlab(expression(paste("Observed ","[",Fe/H,"]",sep="")))+
ylab(expression(paste("Predicted ","[",Fe/H,"]",sep="")))+
geom_abline(intercept = 0,linetype="dashed",color="gray20")+
theme_bw()+
theme(legend.position="none",legend.text = element_text(colour="gray40"),
legend.title=element_blank(),text = element_text(size=15),
axis.line = element_line(color = 'black'),axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
scale_alpha(guide="none",range=c(0,0.45))+scale_color_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_fill_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_shape_tremmel(labels = c("SDSS", "S-PLUS"))+
facet_wrap(~Survey)+
annotate("text",
label = c(rsdss,rsplus), size = 5, x = - 2.75, y = 0.5,parse=TRUE) +
coord_cartesian(ylim=c(-3.75,0.75))
# Residuals
xbin <- cut(g_melt$Fe,seq(-4, 1, by = 1))
yres <- g_melt$value-g_melt$Fe
res_data <- data.frame(Fe=xbin,yres,Survey=g_melt$Survey)
res_data <- res_data[!is.na(res_data$Fe),]
r1 <- ggplot(res_data,aes(x=Fe,y=yres,color=Survey,fill=Survey,shape=Survey))
r2<-r1+
#  stat_density2d(geom="polygon",aes(fill =Survey,alpha=..level..),na.rm = TRUE,n = 250,contour = TRUE) +
geom_boxplot() + xlab(expression(paste("Observed ","[",Fe/H,"]",sep="")))+
ylab("Residual")+
scale_x_discrete(labels=c(-3.5,-2.5,-1.5,-0.5,0.5))+
geom_hline(yintercept = 0,linetype="dashed",color="gray20")+
theme_bw()+
theme(legend.position="none",legend.text = element_text(colour="gray40"),
legend.title=element_blank(),text = element_text(size=15),
axis.line = element_line(color = 'black'),strip.background = element_blank(),
strip.text.x = element_blank())+
scale_alpha(guide="none",range=c(0,0.45))+scale_color_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_fill_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_shape_tremmel(labels = c("SDSS", "S-PLUS"))+
facet_wrap(~Survey)
grid.arrange(p2, r2,ncol=1, nrow =2)
r1 <- ggplot(res_data,aes(x=Fe,y=yres,color=Survey,fill=Survey,shape=Survey))
r2<-r1+
#  stat_density2d(geom="polygon",aes(fill =Survey,alpha=..level..),na.rm = TRUE,n = 250,contour = TRUE) +
geom_boxplot() + xlab(expression(paste("Observed ","[",Fe/H,"]",sep="")))+
ylab("Residuals")+
scale_x_discrete(labels=c(-3.5,-2.5,-1.5,-0.5,0.5))+
geom_hline(yintercept = 0,linetype="dashed",color="gray20")+
theme_bw()+
theme(legend.position="none",legend.text = element_text(colour="gray40"),
legend.title=element_blank(),text = element_text(size=15),
axis.line = element_line(color = 'black'),strip.background = element_blank(),
strip.text.x = element_blank())+
scale_alpha(guide="none",range=c(0,0.45))+scale_color_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_fill_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_shape_tremmel(labels = c("SDSS", "S-PLUS"))+
facet_wrap(~Survey)
pdf("comb_Fe.pdf",width = 10,height = 8)
grid.arrange(p2, r2,ncol=1, nrow =2)
dev.off()
r1 <- ggplot(res_data,aes(x=Fe,y=yres,color=Survey,fill=Survey,shape=Survey))
r2<-r1+
#  stat_density2d(geom="polygon",aes(fill =Survey,alpha=..level..),na.rm = TRUE,n = 250,contour = TRUE) +
geom_violin() + xlab(expression(paste("Observed ","[",Fe/H,"]",sep="")))+
ylab("Residuals")+
scale_x_discrete(labels=c(-3.5,-2.5,-1.5,-0.5,0.5))+
geom_hline(yintercept = 0,linetype="dashed",color="gray20")+
theme_bw()+
theme(legend.position="none",legend.text = element_text(colour="gray40"),
legend.title=element_blank(),text = element_text(size=15),
axis.line = element_line(color = 'black'),strip.background = element_blank(),
strip.text.x = element_blank())+
scale_alpha(guide="none",range=c(0,0.45))+scale_color_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_fill_fivethirtyeight(labels = c("SDSS", "S-PLUS"))+
scale_shape_tremmel(labels = c("SDSS", "S-PLUS"))+
facet_wrap(~Survey)
pdf("comb_Fe_viol.pdf",width = 10,height = 8)
grid.arrange(p2, r2,ncol=1, nrow =2)
dev.off()
unlink('~/Documents/GitHub/InfoViz_IAG_2017/InfoViz_IAG_cache', recursive = TRUE)
setwd("~/Documents/GitHub/InfoViz_IAG_2017")
1+1
unlink('InfoViz_IAG_cache', recursive = TRUE)
install_github('ramnathv/slidifyLibraries')
require(devtools)
install_github('ramnathv/slidifyLibraries')
knitr::opts_chunk$set(echo = FALSE)
require(slidifyLibraries
()
)
require(pander)
install.packages("pander")
x <- runif(100,0,10)
y <- 3+ 2*x
fit <- lm(y~x)
plot(fit)
install.packages("abc")
install.packages(c("face","FADA"))
install.packages("PerformanceAnalytics")
c
c <- melt(cor(d[,c(2,3,5,6,7)]))
require(ggplot2);
require(reshape2);require(d3heatmap);require(circlize);require(ggdendro);require(PerformanceAnalytics)
d <- read.csv("exoplanets.csv",header = T)
d <- d[complete.cases(d),]
head(d)
c <- melt(cor(d[,c(2,3,5,6,7)]))
c
c0 <- cor(d[,c(2,3,5,6,7)])
c0
chart.Correlation(c0, histogram=TRUE, pch=19)
warnings()
c0
d[,c(2,3,5,6,7)]
cor(log10(d[,c(2,3,5,6,7)]))
library(psych)
data("trees")
trees
trees[1,]
PlantGrowth
PlantGrowth[1,]
cars
mtcars
pander(cor(iris[,1:4]))
require(pander)
pander(cor(iris[,1:4]))
library(corrr)
iris[,1:4] %>% correlate() %>% network_plot(min_cor=0.6)
install.packages("corrr")
devtools::install_github("drsimonj/corrr")
library(corrr)
iris[,1:4] %>% correlate() %>% network_plot(min_cor=0.6)
#library
library(circlize)
#Create data
data = data.frame(
factor = sample(letters[1:8], 1000, replace = TRUE),
x = rnorm(1000),
y = runif(1000)
)
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=0.8)
})
# --> Add a scatterplot on it:
circos.trackPoints(data$factor, data$x, data$y, col = rgb(0.1,0.5,0.8,0.3), pch=20)
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackPoints(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.8,0.3), pch=20, cex=2)
# Add the couche #3 --> don't forget you can custom the height of tracks!
circos.par("track.height" = 0.4)
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
circos.trackLines(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.1,0.3), pch=20, cex=2, type="h")
# and continue as long as needed!
#library
library(circlize)
#Create data
data = data.frame(
factor = sample(letters[1:8], 1000, replace = TRUE),
x = rnorm(1000),
y = runif(1000)
)
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=0.8)
})
# --> Add a scatterplot on it:
circos.trackPoints(data$factor, data$x, data$y, col = rgb(0.1,0.5,0.8,0.3), pch=20)
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackPoints(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.8,0.3), pch=20, cex=2)
# Add the couche #3 --> don't forget you can custom the height of tracks!
circos.par("track.height" = 0.4)
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.1,0.3), pch=20, cex=2, type="h")
# and continue as long as needed!
#library
library(circlize)
#Create data
data = data.frame(
factor = sample(letters[1:8], 1000, replace = TRUE),
x = rnorm(1000),
y = runif(1000)
)
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=0.8)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.1,0.5,0.8,0.3), pch=20)
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.8,0.3), pch=20, cex=2)
# Add the couche #3 --> don't forget you can custom the height of tracks!
circos.par("track.height" = 0.4)
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.1,0.3), pch=20, cex=2, type="h")
# and continue as long as needed!
#Create data
data = data.frame(
factor = sample(letters[1:8], 1000, replace = TRUE),
x = rnorm(1000),
y = runif(1000)
)
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=0.8)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.8,0.3))
# Add the couche #3 --> don't forget you can custom the height of tracks!
circos.par("track.height" = 0.4)
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.1,0.3))
# and continue as long as needed!
#library
library(circlize)
#Create data
data = data.frame(
factor = sample(letters[1:8], 1000, replace = TRUE),
x = rnorm(1000),
y = runif(1000)
)
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=0.8)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.8,0.3))
# Add the couche #3 --> don't forget you can custom the height of tracks!
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.1,0.3))
# and continue as long as needed!
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=0.8)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.9,0.5,0.8,0.3))
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=0.8)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.1,0.5,0.8,0.3))
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, data$y, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$x,  col = rgb(0.9,0.5,0.8,0.3))
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, x=data$x, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, x = data$x,panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor, x = data$x,panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor,y=data$y, x = data$x,panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor,y=data$y, x = data$x,panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor,y=data$y, x = data$x,panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, x=data$x,y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$x,  col = rgb(0.9,0.5,0.8,0.3))
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor,y=data$y, x = data$x,panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, x=data$x,y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$x,  col = rgb(0.9,0.5,0.8,0.3))
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.trackPlotRegion(factors = data$factor,y=data$y, x = data$x,panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.trackPlotRegion(factors = data$factor, x=data$x,y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$y,  col = rgb(0.9,0.5,0.8,0.3))
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.par("track.height" = 0.25)
circos.trackPlotRegion(factors = data$factor,y=data$y, x = data$x,panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.par("track.height" = 0.25)
circos.trackPlotRegion(factors = data$factor, x=data$x,y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$y,  col = rgb(0.9,0.5,0.8,0.3))
#Initialize the plot.
par(mar = c(1, 1, 1, 1) )
circos.initialize(factors = data$factor, x = data$x )
# Build the regions of track #1
circos.par("track.height" = 0.25)
circos.trackPlotRegion(factors = data$factor,y=data$y, x = data$x,panel.fun = function(x, y) {
circos.axis(labels.cex=0.5, labels.font=1, lwd=4)
})
# --> Add a scatterplot on it:
circos.trackHist(data$factor, data$x, col = rgb(0.1,0.5,0.8,0.3))
# Build the regions of track #2:
circos.par("track.height" = 0.25)
circos.trackPlotRegion(factors = data$factor, x=data$x,y=data$y, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
# --> Add a scatterplot on it
circos.trackHist(data$factor, data$x,  col = rgb(0.9,0.5,0.8,0.3))
circos.par("track.height" = 0.25)
# Add the couche #3 --> don't forget you can custom the height of tracks!
circos.trackPlotRegion(factors = data$factor, x=data$x, panel.fun = function(x, y) {
circos.axis(labels=FALSE, major.tick=FALSE)
})
circos.trackHist(data$factor, data$x, col = rgb(0.9,0.5,0.1,0.3))
# and continue as long as needed!
